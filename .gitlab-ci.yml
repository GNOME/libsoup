include:
  - component: gitlab.gnome.org/GNOME/citemplates/release-service@master
    inputs:
      dist-job-name: "fedora-test"
      tarball-artifact-path: "_build/meson-dist/$CI_PROJECT_NAME-$CI_COMMIT_TAG.tar.xz"
  - project: 'Infrastructure/freedesktop-ci-templates'
    ref: '84984c97d31d5b4f39cc2164353634a55d457211'
    file:
      - '/templates/fedora.yml'

workflow:
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
    - if: $CI_COMMIT_TAG
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH

variables:
  FDO_UPSTREAM_REPO: GNOME/libsoup

.fedora-image:
  variables:
    FDO_DISTRIBUTION_TAG: '2025-01-14-v3'
    FDO_DISTRIBUTION_VERSION: '41'

.fedora-python2-image:
  variables:
    FDO_DISTRIBUTION_TAG: '2025-01-14-python2-v3'
    FDO_DISTRIBUTION_VERSION: '40'

stages:
  - prepare
  - build
  - coverage
  - docs
  - deploy
  - release

build-fedora-image:
  extends:
    - '.fdo.container-build@fedora'
    - '.fedora-image'
  stage: prepare
  variables:
    FDO_DISTRIBUTION_PACKAGES: >-
      brotli-devel
      clang-analyzer
      gcovr
      git
      gi-docgen
      glib-networking
      gnutls-devel
      gobject-introspection-devel
      gtk-doc
      httpd
      krb5-devel
      lcov
      libasan
      libnghttp2-devel
      libpsl-devel
      meson
      mod_ssl
      redhat-rpm-config
      samba-winbind-clients
      sqlite-devel
      sysprof-devel
      vala
      valgrind
      which
    FDO_DISTRIBUTION_EXEC:
      dnf install --setopt=tsflags='' -y glib2-doc libsoup-doc

build-fedora-autobahn-image:
  extends:
    - '.fdo.container-build@fedora'
    - '.fedora-python2-image'
  stage: prepare
  variables:
    FDO_DISTRIBUTION_PACKAGES: >-
      brotli-devel
      gcc
      glib2-devel
      glib-networking
      libnghttp2-devel
      libpsl-devel
      lsof
      meson
      python2.7
      sqlite-devel
    FDO_DISTRIBUTION_EXEC: >-
      python2.7 -m ensurepip;
      pip2.7 install --upgrade pip wheel;
      pip2.7 install virtualenv wsaccel==0.6.3 autobahntestsuite;

fedora-test:
  stage: build
  tags:
    - ipv6
  extends:
    - '.fdo.distribution-image@fedora'
    - '.fedora-image'
  script:
    - meson setup _build -Db_coverage=true --auto-features=enabled -Dautobahn=disabled
    - meson compile -C _build

    - meson test -j 1 -C _build --verbose

    - cp .gitlab-ci/lcovrc ~/.lcovrc
    - ninja -C _build coverage-html coverage-xml

    - ninja -C _build scan-build
    - bash -c 'if [[ -n "$(ls -A _build/meson-logs/scanbuild/)" ]]; then echo "Scan build log found, assuming defects exist"; exit 1; fi'

    - git config --global --add safe.directory $CI_PROJECT_DIR
    - meson dist -C _build
  artifacts:
    reports:
      junit: "_build/meson-logs/testlog.junit.xml"
      coverage_report:
        coverage_format: cobertura
        path: "_build/meson-logs/coverage.xml"
    name: "libsoup-${CI_JOB_NAME}-${CI_COMMIT_REF_NAME}"
    when: always
    paths:
      - "_build/config.h"
      - "_build/meson-logs/meson-log.txt"
      - "_build/meson-logs/testlog.txt"
      - "_build/meson-logs/coveragereport"
      - "_build/meson-logs/scanbuild"
      - "_build/meson-dist/*.xz"
  coverage: '/^\s+lines\.+:\s+([\d.]+\%)\s+/'

fedora-autobahn-quick:
  stage: build
  tags:
    - ipv6
  extends:
    - '.fdo.distribution-image@fedora'
    - '.fedora-python2-image'
  script:
    - meson setup _build -Dautobahn=enabled
    - meson test -C _build --suite autobahn-quick --verbose
  artifacts:
    paths:
      - "_build/meson-logs/autobahn-report"
  allow_failure: true

fedora-asan:
  stage: build
  tags:
    - asan
  extends:
    - '.fdo.distribution-image@fedora'
    - '.fedora-image'
  variables:
    ASAN_OPTIONS: fast_unwind_on_malloc=0
    SOUP_TEST_NO_IPV6: 1
  script:
    # Introspection doesn't work when linking to libasan, the NTLM tests fail most likely due to unsafe usage of setenv(), autobahn is Python2 only.
    - meson setup _build --auto-features=enabled -Db_sanitize=address -Dintrospection=disabled -Dvapi=disabled -Dntlm=disabled -Ddocs=disabled -Dautobahn=disabled
    - meson test -C _build --verbose --timeout-multiplier=10
  artifacts:
    reports:
      junit: "_build/meson-logs/testlog.junit.xml"
    when: on_failure
    paths:
      - "_build/meson-logs/testlog.txt"

reference:
  stage: docs
  extends:
    - '.fdo.distribution-image@fedora'
    - '.fedora-image'
  variables:
    MESON_ARGS: >-
      -Ddocs=enabled
      -Ddoc_tests=true
      -Dvapi=disabled
  script:
    - mkdir -p _reference/libsoup-3.0
    - meson ${MESON_ARGS} _build
    - meson compile -C _build libsoup-doc --verbose
    - meson test -C _build docs --verbose
    - mv _build/docs/reference/libsoup-3.0/* _reference/libsoup-3.0
    # Add libsoup-2.4 docs.
    - cp -R /usr/share/gtk-doc/html/{glib,gio,gobject,libsoup-2.4} _reference/
    - gtkdoc-rebase --relative --html-dir=_reference/{glib,gio,gobject,libsoup-2.4} --verbose
    - cp .gitlab-ci/{index.html,robots.txt} _reference/
  artifacts:
    paths:
      - _reference

pages:
  stage: deploy
  extends:
    - '.fdo.distribution-image@fedora'
    - '.fedora-image'
  needs: ['reference']
  script:
    - mv _reference public
  artifacts:
    when: on_success
    paths:
      - public
  only:
    - master
